{"created": 1743788200.3505301, "duration": 13.532469034194946, "exitcode": 1, "root": "/Users/draw/development/har-oa3-converter", "environment": {}, "summary": {"passed": 3, "failed": 1, "total": 4, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/docker/test_docker_api.py", "type": "Module"}]}, {"nodeid": "tests/docker/test_docker_api.py", "outcome": "passed", "result": [{"nodeid": "tests/docker/test_docker_api.py::test_api_docs_endpoint", "type": "Function", "lineno": 159}, {"nodeid": "tests/docker/test_docker_api.py::test_api_openapi_schema_endpoint", "type": "Function", "lineno": 167}, {"nodeid": "tests/docker/test_docker_api.py::test_api_formats_endpoint_json", "type": "Function", "lineno": 180}, {"nodeid": "tests/docker/test_docker_api.py::test_api_formats_endpoint_yaml", "type": "Function", "lineno": 211}, {"nodeid": "tests/docker/test_docker_api.py::test_api_convert_endpoint_json", "type": "Function", "lineno": 235}, {"nodeid": "tests/docker/test_docker_api.py::test_api_convert_endpoint_yaml", "type": "Function", "lineno": 262}, {"nodeid": "tests/docker/test_docker_api.py::test_api_convert_with_options", "type": "Function", "lineno": 289}, {"nodeid": "tests/docker/test_docker_api.py::test_api_error_handling_no_file", "type": "Function", "lineno": 319}, {"nodeid": "tests/docker/test_docker_api.py::test_api_error_handling_invalid_format", "type": "Function", "lineno": 328}, {"nodeid": "tests/docker/test_docker_api.py::test_api_error_handling_invalid_file", "type": "Function", "lineno": 340}, {"nodeid": "tests/docker/test_docker_api.py::test_api_convert_with_source_format_override", "type": "Function", "lineno": 362}]}], "tests": [{"nodeid": "tests/docker/test_docker_api.py::test_api_docs_endpoint", "lineno": 159, "outcome": "passed", "keywords": ["test_api_docs_endpoint", "skipif", "pytestmark", "test_docker_api.py", "tests/docker/__init__.py", "har-oa3-converter"], "setup": {"duration": 3.348407249999582, "outcome": "passed"}, "call": {"duration": 0.004088166999281384, "outcome": "passed"}, "teardown": {"duration": 0.5962912079994567, "outcome": "passed"}}, {"nodeid": "tests/docker/test_docker_api.py::test_api_openapi_schema_endpoint", "lineno": 167, "outcome": "passed", "keywords": ["test_api_openapi_schema_endpoint", "skipif", "pytestmark", "test_docker_api.py", "tests/docker/__init__.py", "har-oa3-converter"], "setup": {"duration": 2.3927337920031277, "outcome": "passed"}, "call": {"duration": 0.00917495900648646, "outcome": "passed"}, "teardown": {"duration": 0.5391607909987215, "outcome": "passed"}}, {"nodeid": "tests/docker/test_docker_api.py::test_api_formats_endpoint_json", "lineno": 180, "outcome": "passed", "keywords": ["test_api_formats_endpoint_json", "skipif", "pytestmark", "test_docker_api.py", "tests/docker/__init__.py", "har-oa3-converter"], "setup": {"duration": 2.3479179999994813, "outcome": "passed"}, "call": {"duration": 0.003839375000097789, "outcome": "passed"}, "teardown": {"duration": 0.5444184590014629, "outcome": "passed"}}, {"nodeid": "tests/docker/test_docker_api.py::test_api_formats_endpoint_yaml", "lineno": 211, "outcome": "failed", "keywords": ["test_api_formats_endpoint_yaml", "skipif", "pytestmark", "test_docker_api.py", "tests/docker/__init__.py", "har-oa3-converter"], "setup": {"duration": 2.379444665988558, "outcome": "passed"}, "call": {"duration": 0.006063583001377992, "outcome": "failed", "crash": {"path": "/Users/draw/development/har-oa3-converter/tests/docker/test_docker_api.py", "lineno": 220, "message": "assert 500 == 200\n +  where 500 = <Response [500]>.status_code"}, "traceback": [{"path": "tests/docker/test_docker_api.py", "lineno": 220, "message": "AssertionError"}], "longrepr": "api_container = <tests.docker.test_docker_api.DockerAPIContainer object at 0x109d5cb00>\n\n    @docker_running\n    def test_api_formats_endpoint_yaml(api_container: DockerAPIContainer) -> None:\n        \"\"\"Test the API formats endpoint with YAML response.\"\"\"\n        # Set Accept header for YAML\n        headers = {\"Accept\": \"application/x-yaml\"}\n        response = requests.get(f\"{api_container.url}/api/formats\", headers=headers)\n    \n        # Verify response basics\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests/docker/test_docker_api.py:220: AssertionError"}, "teardown": {"duration": 0.5637986669898964, "outcome": "passed"}}], "warnings": [{"message": "jsonschema.exceptions.RefResolutionError is deprecated as of version 4.18.0. If you wish to catch potential reference resolution errors, directly catch referencing.exceptions.Unresolvable.", "category": "DeprecationWarning", "when": "collect", "filename": "/Users/draw/Library/Caches/pypoetry/virtualenvs/har-oa3-converter-MP2WH2QD-py3.13/lib/python3.13/site-packages/schemathesis/generation/coverage.py", "lineno": 305}]}