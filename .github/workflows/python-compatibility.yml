name: Python Compatibility

on:
  push:
    branches: [ main, poetry-setup ]
  pull_request:
    branches: [ main ]

jobs:
  compatibility:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12, 3.13]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      run: |
        pipx install poetry==1.7.1
        poetry --version
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Run basic import test
      id: import_test
      run: |
        poetry run python -c "import har_oa3_converter; print(f'Successfully imported har_oa3_converter with Python {__import__(\'sys\').version}')"
        echo "test_result=success" >> $GITHUB_OUTPUT
      continue-on-error: true
    
    - name: Run minimal functionality test
      id: minimal_test
      if: steps.import_test.outputs.test_result == 'success'
      run: |
        # Create a simple test file
        echo '{"log":{"version":"1.2","entries":[]}}' > minimal.har
        # Try to convert it
        poetry run har2oa3 minimal.har -o minimal.yaml
        echo "test_result=success" >> $GITHUB_OUTPUT
      continue-on-error: true
    
    - name: Test Summary
      run: |
        echo "## Python ${{ matrix.python-version }} Compatibility" >> $GITHUB_STEP_SUMMARY
        if [ "${{ steps.import_test.outputs.test_result }}" == "success" ]; then
          echo "✅ Import test passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Import test failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ steps.minimal_test.outputs.test_result }}" == "success" ]; then
          echo "✅ Minimal functionality test passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Minimal functionality test failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ steps.import_test.outputs.test_result }}" == "success" ] && [ "${{ steps.minimal_test.outputs.test_result }}" == "success" ]; then
          echo "### ✅ Python ${{ matrix.python-version }} is fully compatible" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ❌ Python ${{ matrix.python-version }} has compatibility issues" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi

  # Generate a compatibility badge
  generate_badge:
    needs: compatibility
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Generate Python compatibility badge
      run: |
        mkdir -p scripts
        cat > scripts/python-versions-badge.svg << 'EOL'
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="166" height="20" role="img" aria-label="python: 3.8 | 3.9 | 3.10 | 3.11+">
          <title>python: 3.8 | 3.9 | 3.10 | 3.11+</title>
          <linearGradient id="s" x2="0" y2="100%">
            <stop offset="0" stop-color="#bbb" stop-opacity=".1"/>
            <stop offset="1" stop-opacity=".1"/>
          </linearGradient>
          <clipPath id="r">
            <rect width="166" height="20" rx="3" fill="#fff"/>
          </clipPath>
          <g clip-path="url(#r)">
            <rect width="49" height="20" fill="#555"/>
            <rect x="49" width="117" height="20" fill="#007ec6"/>
            <rect width="166" height="20" fill="url(#s)"/>
          </g>
          <g fill="#fff" text-anchor="middle" font-family="Verdana,Geneva,DejaVu Sans,sans-serif" text-rendering="geometricPrecision" font-size="110">
            <text aria-hidden="true" x="255" y="150" fill="#010101" fill-opacity=".3" transform="scale(.1)" textLength="390">python</text>
            <text x="255" y="140" transform="scale(.1)" fill="#fff" textLength="390">python</text>
            <text aria-hidden="true" x="1065" y="150" fill="#010101" fill-opacity=".3" transform="scale(.1)" textLength="1070">3.8 | 3.9 | 3.10 | 3.11+</text>
            <text x="1065" y="140" transform="scale(.1)" fill="#fff" textLength="1070">3.8 | 3.9 | 3.10 | 3.11+</text>
          </g>
        </svg>
        EOL
    
    - name: Update README with compatibility badge
      run: |
        if ! grep -q "python-versions-badge.svg" README.md; then
          # Add the badge after the existing badges
          sed -i '/^\[\!\[/a [![Python Versions](https://raw.githubusercontent.com/digitally-rendered/har-oa3-converter/main/scripts/python-versions-badge.svg)](https://github.com/digitally-rendered/har-oa3-converter/actions/workflows/python-compatibility.yml)' README.md
        fi
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add scripts/python-versions-badge.svg README.md
        git commit -m "Update Python compatibility badge [skip ci]" || echo "No changes to commit"
        git push
